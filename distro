#!/bin/sh
# Returns tab deliminated output for OS/Kernel/Arch/Distro/Version

getkernel() {
	if [ "${OS}" == "AIX" ]; then
		KERNEL=$(oslevel)
	else
		KERNEL=$(uname -r)
	fi
	export KERNEL
}

getdistro() {
	if [ "${OS}" == "Linux" ]; then
		if [ -f /etc/redhat-release ]; then
			DISTRO=$(cat /etc/redhat-release | awk '{print $1}')
		elif [ -f /etc/mandriva-release ]; then
			DISTRO="Mandriva"
		elif [ -f /etc/arch-release ]; then
			DISTRO="ArchLinux"
		elif [ -f /etc/SuSE-release ]; then
			DISTRO="SuSE"
		elif [ -f /etc/mandrake-release ]; then
			DISTRO="Mandrake"
		elif [ -f /etc/debian_version ]; then
			# shit based on debian
			if [ -f /etc/mailcleaner/etc/mailcleaner/version.def ]; then
				DISTRO="MailCleaner"
			else
				DISTRO="Debian"
			fi
		elif [ -f /etc/UnitedLinux-release ]; then
			DISTRO="UnitedLinux"
		else
			DISTRO=$(lsb_release -si)
		fi
		if [ -z "${DISTRO}" ]; then
			DISTRO="Unknown"
		fi
	elif [ "${OS}" == "FreeBSD" ]; then
		if [ -f /etc/platform -o -f /etc/version ]; then
			DISTRO="pfSense"
		elif [ $(pbreg get /PC-BSD/SysType 2>/dev/null) ]; then
			DISTRO=$(pbreg get /PC-BSD/SysType)
		else
			DISTRO=$(uname -i)
		fi
	fi
	export DISTRO
}

getarch() {
	if [ "${OS}" == "Solaris" ]; then
		ARCH=$(uname -p)
	else
		ARCH=$(uname -m)
	fi
	export ARCH
}

getversion() {
	if [ "${OS}" == "AIX" ]; then
		VERSION=$(oslevel -r)
	elif [ "${OS}" == "FreeBSD" ]; then
		if [ "${DISTRO}" == "pfSense" ]; then
			VERSION=$(cat /etc/version)
		elif [ "${DISTRO}" == "PC-BSD" ]; then
			VERSION=$(pbreg get /PC-BSD/Version)
		elif [ "${DISTRO}" == "TrueOS" ]; then
			VERSION=$(pbreg get /PC-BSD/Version)
		fi
	elif [ "${OS}" == "Linux" ]; then
		if [ "${DISTRO}" == "Redhat" ]; then
			# nope
		else
			VERSION="Unknown"
		fi
	fi
	export VERSION
}

case $(uname -s) in
	Linux)
		OS="Linux"
		getkernel
		getarch
		getdistro
		getversion
		;;
	SunOS)
		OS="Solaris"
		getkernel
		getarch
		getdistro
		getversion
		;;
	FreeBSD)
		OS="FreeBSD"
		getkernel
		getarch
		getdistro
		getversion
		;;
	AIX)
		OS="AIX"
		getkernel
		getversion
		;;
	*)
		# No idea what it is, kill them with fire
		echo "Unsupported"
		exit 1
esac

echo "${OS}|${KERNEL}|${ARCH}|${DISTRO}|${VERSION}"

exit 0
